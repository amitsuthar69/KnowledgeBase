REST stands for REpresentational State Transfer. 

- It is a way to that allow communication between different systems over the internet. 
- REST APIs work by sending requests and receiving responses, typically in JSON format, between the client and server.

- REST APIs use standard HTTP methods (such as GET, POST, PUT, DELETE) to define actions that can be performed on resources. 
- These methods align with CRUD (Create, Read, Update, Delete) operations, which are used to manipulate resources over the web.

- Key concepts:

- Stateless: 
  - Each request from a client to a server must contain all the information the server needs to fulfill the request. 
  - No session state is stored on the server.
- Client-Server Architecture: 
  - RESTful APIs are based on a client-server model, where the client and server operate independently, allowing scalability.
- Cacheable: 
  - Responses from the server can be explicitly marked as cacheable or non-cacheable to improve performance.
- Uniform Interface: 
  - REST APIs follow a set of conventions and constraints, such as consistent URL paths, 
    standardized HTTP methods, and status codes, to ensure smooth communication.
- Layered System: 
  - REST APIs can be deployed on multiple layers, which helps with scalability and security.